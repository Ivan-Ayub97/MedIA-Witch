# Workflow mejorado para desplegar contenido estático en GitHub Pages
name: Deploy Static Content to GitHub Pages

on:
  push:
    branches:
      - "main"  # Se activa cuando se hace push a la rama principal
  workflow_dispatch:  # Permite ejecutar el flujo manualmente desde la pestaña de Actions

# Establece permisos del GITHUB_TOKEN para permitir despliegue en GitHub Pages
permissions:
  contents: read    # Permite leer el contenido del repositorio
  pages: write      # Permite escribir en GitHub Pages
  id-token: write   # Permite escribir en el token de identificación

# Control de ejecución concurrente
concurrency:
  group: "pages"            # Define el grupo de concurrencia como 'pages'
  cancel-in-progress: false # No cancela los despliegues en curso, asegurando que la implementación se complete

jobs:
  deploy:
    # Configuración del entorno de despliegue
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL de la página desplegada
    runs-on: ubuntu-latest  # Utiliza la última versión de Ubuntu para el entorno de ejecución

    steps:
      # Paso 1: Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3  # Usa la versión más estable de checkout

      # Paso 2: Configuración de GitHub Pages
      - name: Setup Pages
        uses: actions/setup-pages@v2  # Utiliza una versión eficiente para el despliegue en GitHub Pages

      # Paso 3: Limpieza y preparación de la carpeta de despliegue
      - name: Clean and prepare deployment folder
        run: |
          # Limpia archivos no deseados y organiza la estructura antes de desplegar
          rm -rf .git  # Elimina el historial de git (opcional)
          mkdir public  # Crea la carpeta 'public' para los archivos de despliegue
          cp -r * public  # Copia todos los archivos relevantes a la carpeta pública

      # Paso 4: Subir el artefacto de despliegue
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'  # Asegura que solo se desplieguen los archivos de la carpeta 'public'

      # Paso 5: Desplegar en GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Usa la última versión estable para el despliegue

      # Paso 6: Verificar éxito del despliegue
      - name: Check deployment success
        run: |
          if [[ ${{ steps.deployment.outputs.page_url }} == "" ]]; then
            echo "Error: Deployment failed!"
            exit 1  # Termina el flujo con error si el despliegue falla
          else
            echo "Deployment successful!"  # Mensaje de éxito si el despliegue fue correcto
            echo "Page URL: ${{ steps.deployment.outputs.page_url }}"  # Muestra la URL de la página desplegada
