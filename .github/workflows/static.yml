# Workflow mejorado para desplegar contenido estático en GitHub Pages
name: Deploy Static Content to GitHub Pages

on:
  # Ejecuta en pushes hacia la rama principal
  push:
    branches: 
      - "main"

  # Permite ejecutar el flujo manualmente desde la pestaña de Actions
  workflow_dispatch:

# Establece permisos del GITHUB_TOKEN para permitir despliegue en GitHub Pages
permissions:
  contents: read    # Permite leer el contenido del repositorio
  pages: write      # Permite escribir en GitHub Pages
  id-token: write   # Permite escribir en el token de identificación

# Permite solo un despliegue concurrente, evitando la ejecución de múltiples despliegues al mismo tiempo.
# No cancela las ejecuciones en curso para asegurar que se complete la implementación en producción.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Usa la versión más estable de checkout

      - name: Setup Pages
        uses: actions/setup-pages@v2  # Versión más eficiente para GitHub Pages

      - name: Clean and prepare deployment folder
        run: |
          # Si necesitas excluir archivos no deseados o limpiar antes de desplegar, usa esto
          rm -rf .git  # Opcional: Si no quieres subir el historial de git
          mkdir public  # Si es necesario que tus archivos se desplieguen en una carpeta específica
          cp -r * public  # Copiar todos los archivos a la carpeta pública

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'  # Se asegura de que solo los archivos relevantes sean desplegados

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Última versión estable para deploy

      - name: Check deployment success
        run: |
          if [[ ${{ steps.deployment.outputs.page_url }} == "" ]]; then
            echo "Error: Deployment failed!"
            exit 1
          else
            echo "Deployment successful!"
            echo "Page URL: ${{ steps.deployment.outputs.page_url }}"
          fi
